{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x859f6e05410893fe64BC84d92BdA773fF798cf66",
    "txHash": "0xf60cabcb0d7d49263038eaa4334c655aed2007c70b93fb2444861bc952d696ba",
    "deployTransaction": {
      "hash": "0xf60cabcb0d7d49263038eaa4334c655aed2007c70b93fb2444861bc952d696ba",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x8Bd671Ff94fCF7cAFF7e396A3aC38db2720DB3a7",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x081d2054f7"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x081d2054f7"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 13,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x4119c142d2fd3245dbbf7e4626308d1fb39018a5c091cb50139312207c3e1f7c",
      "s": "0x75874820c2c5209ee9c820bf16bf92f9e1605d33583ab4cd845c654878882719",
      "v": 1,
      "creates": "0x859f6e05410893fe64BC84d92BdA773fF798cf66",
      "chainId": 1
    }
  },
  "proxies": [
    {
      "address": "0x0d02755a5700414B26FF040e1dE35D337DF56218",
      "txHash": "0x8df56dcaf75960419e73b6e94e6379f8c5a572f3bd03232539d8d3c90f56be6d",
      "kind": "transparent"
    },
    {
      "address": "0x1b5d2904bE3E4711a848Be09b17dEE89E6A5BC27",
      "txHash": "0xae4b86688dd8f2bb092eb6571560f200271ac0ec1e2f4e6fde45b52fa9eb5fc8",
      "kind": "transparent"
    },
    {
      "address": "0x98118d1cfFCf7C3E26b41aE29B761f2bC3c0eA0f",
      "txHash": "0x1d021c2d71d29d0b3564934c774b510a62525e79f60e8758bbaed67b94eacf29",
      "kind": "transparent"
    },
    {
      "address": "0xAd36eb917Eeb957c90b577B7051D0C9BE930a1F8",
      "txHash": "0x7c849f5fef58419e5f8bb82eab81405597f7c926586fc8068e73dc68d2b6be76",
      "kind": "transparent"
    },
    {
      "address": "0x26FC1f11E612366d3367fc0cbFfF9e819da91C8d",
      "txHash": "0x64d78c93123f350e66143520baa58179da7f267e24e7e1fdcf5bfe69de0b0e74",
      "kind": "transparent"
    },
    {
      "address": "0xd7e97172C2419566839Bf80DeeA46D22B1B2E06E",
      "txHash": "0x611fc09e4ec7a1f0cb156fd0c81a5dad042de9f902b0a51bd94dfc2cca8cd91f",
      "kind": "transparent"
    },
    {
      "address": "0x2338D34337dd0811b684640de74717B73F7B8059",
      "txHash": "0x220351e0e9794a679d27d2f089f689820822627fb057a66b1440d5ce53cd3a1b",
      "kind": "transparent"
    },
    {
      "address": "0xC0db6A46B34060C73A17552487bFeBB1FDA85191",
      "txHash": "0x0fe26f40f8c3fa328850455232c633c70f99f9e9ba99acf59b38933e20804d23",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fef8717d17dfb270770d7356b1be669fb1e9442e717de466da01f710e29f04b6": {
      "address": "0x02863C14603C3b157379999F567DDECE151e9153",
      "txHash": "0xb860d218b354a222993e0b7164b3e825194e86e44e16e740254625ff556156dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1827_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1827_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1827_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e175987a3f2c5352b705694046353207a7ddda4f572c7deba48211aa240df30f": {
      "address": "0x6d8138AB8458BC420AC2dC078C59E8BD4DeFCAA6",
      "txHash": "0xafd28bfcd6bde0594d3857714cf14aaff70adbe7ef7a5830fff31babdf4b2a8e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:23"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8b5288f7c43d60907c08c645b95ea5d2f9a2eaa3b8a097fad71b83c404cedf2c": {
      "address": "0x446AB941FFBc867740B55Ec084f4c802B979dCF9",
      "txHash": "0x2d8cb40242e14351ad2f353c7eafced05a93c6e980eb32be8cadb9ee8f12f9de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Vault",
            "label": "bendToken",
            "type": "t_address",
            "src": "contracts/incentives/Vault.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "848bf25eae6158bbda306b4b9ff8a2d48a2ff651f6c93debc74f6f6cf499e4c0": {
      "address": "0xcAbe4E00a44Ff38990A42f43312d470DE5796FA6",
      "txHash": "0x3338be52bc50fc61e34f3fbacf91481be1bcc5b3b20a9d40ba03e095966fb92d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4820_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)1050",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "authorizedAssets",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:32"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1050": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AssetData)4820_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4820_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3388d38446c1a259bc2bc401e31d16262b7372f15fdac2f83aee8b308870332b": {
      "address": "0x7529834A5974E2d5FFF3D0f0591e9A5Ca2CA1619",
      "txHash": "0x7e6e9997959243d8dee9df0bbeee9adf9c55ec98bd525065e43da4879d6d8342",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:23"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "86c1e6923114b4b2e7c0546b7863f7fcf15d0da996e3ce10cd001049496d6727": {
      "address": "0x78519c320A3015AF42CB9E2A275ea5c422f11b5b",
      "txHash": "0x0b0b4e151ef39560e61a5287ee2d203ec7756f7f7d1d3ee2fe8d0a7f27fcd5f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "VeBend",
            "label": "token",
            "type": "t_address",
            "src": "contracts/vote/VeBend.sol:54"
          },
          {
            "contract": "VeBend",
            "label": "supply",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:55"
          },
          {
            "contract": "VeBend",
            "label": "locked",
            "type": "t_mapping(t_address,t_struct(LockedBalance)12078_storage)",
            "src": "contracts/vote/VeBend.sol:57"
          },
          {
            "contract": "VeBend",
            "label": "epoch",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:60"
          },
          {
            "contract": "VeBend",
            "label": "supplyPointHistory",
            "type": "t_mapping(t_uint256,t_struct(Point)12073_storage)",
            "src": "contracts/vote/VeBend.sol:61"
          },
          {
            "contract": "VeBend",
            "label": "userPointHistory",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Point)12073_storage))",
            "src": "contracts/vote/VeBend.sol:62"
          },
          {
            "contract": "VeBend",
            "label": "userPointEpoch",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vote/VeBend.sol:63"
          },
          {
            "contract": "VeBend",
            "label": "slopeChanges",
            "type": "t_mapping(t_uint256,t_int256)",
            "src": "contracts/vote/VeBend.sol:64"
          },
          {
            "contract": "VeBend",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:66"
          },
          {
            "contract": "VeBend",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:67"
          },
          {
            "contract": "VeBend",
            "label": "decimals",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(LockedBalance)12078_storage)": {
            "label": "mapping(address => struct IVeBend.LockedBalance)"
          },
          "t_struct(LockedBalance)12078_storage": {
            "label": "struct IVeBend.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_struct(Point)12073_storage)": {
            "label": "mapping(uint256 => struct IVeBend.Point)"
          },
          "t_struct(Point)12073_storage": {
            "label": "struct IVeBend.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int256"
              },
              {
                "label": "slope",
                "type": "t_int256"
              },
              {
                "label": "ts",
                "type": "t_uint256"
              },
              {
                "label": "blk",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Point)12073_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IVeBend.Point))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_int256)": {
            "label": "mapping(uint256 => int256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "794e01a0271de0b1ea875f2090e8ec170017cc71f0ae088bb4dc2931f18f659d": {
      "address": "0xCC98FdC0FCe55cF5C51C52C3D66bc676bC6EE2e2",
      "txHash": "0x8232f510194b2174ad9332bbcb944731132bc0fe7cc1fcdc321ff61fb0cb5b2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeDistributor",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:23"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursor",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:24"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursorOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:25"
          },
          {
            "contract": "FeeDistributor",
            "label": "userEpochOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:26"
          },
          {
            "contract": "FeeDistributor",
            "label": "lastDistributeTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:28"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokensPerWeek",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:29"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokenLastBalance",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:30"
          },
          {
            "contract": "FeeDistributor",
            "label": "veSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:32"
          },
          {
            "contract": "FeeDistributor",
            "label": "totalClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:34"
          },
          {
            "contract": "FeeDistributor",
            "label": "veBEND",
            "type": "t_contract(IVeBend)12184",
            "src": "contracts/incentives/FeeDistributor.sol:36"
          },
          {
            "contract": "FeeDistributor",
            "label": "WETH",
            "type": "t_contract(IWETH)8850",
            "src": "contracts/incentives/FeeDistributor.sol:37"
          },
          {
            "contract": "FeeDistributor",
            "label": "addressesProvider",
            "type": "t_contract(ILendPoolAddressesProvider)8599",
            "src": "contracts/incentives/FeeDistributor.sol:38"
          },
          {
            "contract": "FeeDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:39"
          },
          {
            "contract": "FeeDistributor",
            "label": "bendCollector",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IVeBend)12184": {
            "label": "contract IVeBend"
          },
          "t_contract(IWETH)8850": {
            "label": "contract IWETH"
          },
          "t_contract(ILendPoolAddressesProvider)8599": {
            "label": "contract ILendPoolAddressesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6ea74517a4a6c6cf35584ae2f703b18e3b41cc1a8d0e532d632e65f5ba018aea": {
      "address": "0xD85c8aDAc79B1417f7112393335A86A03A532263",
      "txHash": "0xf353077f5fa245c4efe58ff4aade2e37c020290a9bca908829f79b0bb77df75b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LockupBendFactory",
            "label": "bendToken",
            "type": "t_contract(IERC20Upgradeable)1050",
            "src": "contracts/incentives/LockupBendFactory.sol:27"
          },
          {
            "contract": "LockupBendFactory",
            "label": "veBend",
            "type": "t_contract(IVeBend)12238",
            "src": "contracts/incentives/LockupBendFactory.sol:28"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeDistributor",
            "type": "t_contract(IFeeDistributor)8550",
            "src": "contracts/incentives/LockupBendFactory.sol:29"
          },
          {
            "contract": "LockupBendFactory",
            "label": "lockups",
            "type": "t_array(t_contract(ILockup)8747)3_storage",
            "src": "contracts/incentives/LockupBendFactory.sol:31"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndexs",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/LockupBendFactory.sol:33"
          },
          {
            "contract": "LockupBendFactory",
            "label": "locked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/LockupBendFactory.sol:34"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndex",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:35"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndexlastUpdateTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:36"
          },
          {
            "contract": "LockupBendFactory",
            "label": "totalLocked",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:37"
          },
          {
            "contract": "LockupBendFactory",
            "label": "WETH",
            "type": "t_contract(IWETH)8904",
            "src": "contracts/incentives/LockupBendFactory.sol:39"
          },
          {
            "contract": "LockupBendFactory",
            "label": "snapshotDelegation",
            "type": "t_contract(ISnapshotDelegation)8847",
            "src": "contracts/incentives/LockupBendFactory.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1050": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IVeBend)12238": {
            "label": "contract IVeBend"
          },
          "t_contract(IFeeDistributor)8550": {
            "label": "contract IFeeDistributor"
          },
          "t_array(t_contract(ILockup)8747)3_storage": {
            "label": "contract ILockup[3]"
          },
          "t_contract(ILockup)8747": {
            "label": "contract ILockup"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IWETH)8904": {
            "label": "contract IWETH"
          },
          "t_contract(ISnapshotDelegation)8847": {
            "label": "contract ISnapshotDelegation"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
