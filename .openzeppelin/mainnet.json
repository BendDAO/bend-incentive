{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x859f6e05410893fe64BC84d92BdA773fF798cf66",
    "txHash": "0xf60cabcb0d7d49263038eaa4334c655aed2007c70b93fb2444861bc952d696ba"
  },
  "proxies": [
    {
      "address": "0x0d02755a5700414B26FF040e1dE35D337DF56218",
      "txHash": "0x8df56dcaf75960419e73b6e94e6379f8c5a572f3bd03232539d8d3c90f56be6d",
      "kind": "transparent"
    },
    {
      "address": "0x1b5d2904bE3E4711a848Be09b17dEE89E6A5BC27",
      "txHash": "0xae4b86688dd8f2bb092eb6571560f200271ac0ec1e2f4e6fde45b52fa9eb5fc8",
      "kind": "transparent"
    },
    {
      "address": "0x98118d1cfFCf7C3E26b41aE29B761f2bC3c0eA0f",
      "txHash": "0x1d021c2d71d29d0b3564934c774b510a62525e79f60e8758bbaed67b94eacf29",
      "kind": "transparent"
    },
    {
      "address": "0xAd36eb917Eeb957c90b577B7051D0C9BE930a1F8",
      "txHash": "0x7c849f5fef58419e5f8bb82eab81405597f7c926586fc8068e73dc68d2b6be76",
      "kind": "transparent"
    },
    {
      "address": "0x26FC1f11E612366d3367fc0cbFfF9e819da91C8d",
      "txHash": "0x64d78c93123f350e66143520baa58179da7f267e24e7e1fdcf5bfe69de0b0e74",
      "kind": "transparent"
    },
    {
      "address": "0xd7e97172C2419566839Bf80DeeA46D22B1B2E06E",
      "txHash": "0x611fc09e4ec7a1f0cb156fd0c81a5dad042de9f902b0a51bd94dfc2cca8cd91f",
      "kind": "transparent"
    },
    {
      "address": "0x2338D34337dd0811b684640de74717B73F7B8059",
      "txHash": "0x220351e0e9794a679d27d2f089f689820822627fb057a66b1440d5ce53cd3a1b",
      "kind": "transparent"
    },
    {
      "address": "0x7941D082D46a9A8c3E8c2106187A24B74cc1bdD3",
      "txHash": "0x25d9b59801dd99db11dcffc4309859f4fdae472fdcaf0f327e6be33ab270f844",
      "kind": "transparent"
    },
    {
      "address": "0x647C509AF2A2b2294bB79fCE12DaEc8e7cf938f7",
      "txHash": "0x23cc732b7bd8b0c759af33550ecfd93bb36ec00670921a3c0a8549188631d38a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fef8717d17dfb270770d7356b1be669fb1e9442e717de466da01f710e29f04b6": {
      "address": "0x02863C14603C3b157379999F567DDECE151e9153",
      "txHash": "0xb860d218b354a222993e0b7164b3e825194e86e44e16e740254625ff556156dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1827_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1827_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1827_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e175987a3f2c5352b705694046353207a7ddda4f572c7deba48211aa240df30f": {
      "address": "0x6d8138AB8458BC420AC2dC078C59E8BD4DeFCAA6",
      "txHash": "0xafd28bfcd6bde0594d3857714cf14aaff70adbe7ef7a5830fff31babdf4b2a8e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:23"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8b5288f7c43d60907c08c645b95ea5d2f9a2eaa3b8a097fad71b83c404cedf2c": {
      "address": "0x446AB941FFBc867740B55Ec084f4c802B979dCF9",
      "txHash": "0x2d8cb40242e14351ad2f353c7eafced05a93c6e980eb32be8cadb9ee8f12f9de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Vault",
            "label": "bendToken",
            "type": "t_address",
            "src": "contracts/incentives/Vault.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "848bf25eae6158bbda306b4b9ff8a2d48a2ff651f6c93debc74f6f6cf499e4c0": {
      "address": "0xcAbe4E00a44Ff38990A42f43312d470DE5796FA6",
      "txHash": "0x3338be52bc50fc61e34f3fbacf91481be1bcc5b3b20a9d40ba03e095966fb92d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4820_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)1050",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "authorizedAssets",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:32"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1050": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AssetData)4820_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4820_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3388d38446c1a259bc2bc401e31d16262b7372f15fdac2f83aee8b308870332b": {
      "address": "0x7529834A5974E2d5FFF3D0f0591e9A5Ca2CA1619",
      "txHash": "0x7e6e9997959243d8dee9df0bbeee9adf9c55ec98bd525065e43da4879d6d8342",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:23"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "86c1e6923114b4b2e7c0546b7863f7fcf15d0da996e3ce10cd001049496d6727": {
      "address": "0x78519c320A3015AF42CB9E2A275ea5c422f11b5b",
      "txHash": "0x0b0b4e151ef39560e61a5287ee2d203ec7756f7f7d1d3ee2fe8d0a7f27fcd5f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "VeBend",
            "label": "token",
            "type": "t_address",
            "src": "contracts/vote/VeBend.sol:54"
          },
          {
            "contract": "VeBend",
            "label": "supply",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:55"
          },
          {
            "contract": "VeBend",
            "label": "locked",
            "type": "t_mapping(t_address,t_struct(LockedBalance)12078_storage)",
            "src": "contracts/vote/VeBend.sol:57"
          },
          {
            "contract": "VeBend",
            "label": "epoch",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:60"
          },
          {
            "contract": "VeBend",
            "label": "supplyPointHistory",
            "type": "t_mapping(t_uint256,t_struct(Point)12073_storage)",
            "src": "contracts/vote/VeBend.sol:61"
          },
          {
            "contract": "VeBend",
            "label": "userPointHistory",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Point)12073_storage))",
            "src": "contracts/vote/VeBend.sol:62"
          },
          {
            "contract": "VeBend",
            "label": "userPointEpoch",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vote/VeBend.sol:63"
          },
          {
            "contract": "VeBend",
            "label": "slopeChanges",
            "type": "t_mapping(t_uint256,t_int256)",
            "src": "contracts/vote/VeBend.sol:64"
          },
          {
            "contract": "VeBend",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:66"
          },
          {
            "contract": "VeBend",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:67"
          },
          {
            "contract": "VeBend",
            "label": "decimals",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(LockedBalance)12078_storage)": {
            "label": "mapping(address => struct IVeBend.LockedBalance)"
          },
          "t_struct(LockedBalance)12078_storage": {
            "label": "struct IVeBend.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_struct(Point)12073_storage)": {
            "label": "mapping(uint256 => struct IVeBend.Point)"
          },
          "t_struct(Point)12073_storage": {
            "label": "struct IVeBend.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int256"
              },
              {
                "label": "slope",
                "type": "t_int256"
              },
              {
                "label": "ts",
                "type": "t_uint256"
              },
              {
                "label": "blk",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Point)12073_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IVeBend.Point))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_int256)": {
            "label": "mapping(uint256 => int256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "794e01a0271de0b1ea875f2090e8ec170017cc71f0ae088bb4dc2931f18f659d": {
      "address": "0xCC98FdC0FCe55cF5C51C52C3D66bc676bC6EE2e2",
      "txHash": "0x8232f510194b2174ad9332bbcb944731132bc0fe7cc1fcdc321ff61fb0cb5b2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeDistributor",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:23"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursor",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:24"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursorOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:25"
          },
          {
            "contract": "FeeDistributor",
            "label": "userEpochOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:26"
          },
          {
            "contract": "FeeDistributor",
            "label": "lastDistributeTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:28"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokensPerWeek",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:29"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokenLastBalance",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:30"
          },
          {
            "contract": "FeeDistributor",
            "label": "veSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:32"
          },
          {
            "contract": "FeeDistributor",
            "label": "totalClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:34"
          },
          {
            "contract": "FeeDistributor",
            "label": "veBEND",
            "type": "t_contract(IVeBend)12184",
            "src": "contracts/incentives/FeeDistributor.sol:36"
          },
          {
            "contract": "FeeDistributor",
            "label": "WETH",
            "type": "t_contract(IWETH)8850",
            "src": "contracts/incentives/FeeDistributor.sol:37"
          },
          {
            "contract": "FeeDistributor",
            "label": "addressesProvider",
            "type": "t_contract(ILendPoolAddressesProvider)8599",
            "src": "contracts/incentives/FeeDistributor.sol:38"
          },
          {
            "contract": "FeeDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:39"
          },
          {
            "contract": "FeeDistributor",
            "label": "bendCollector",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IVeBend)12184": {
            "label": "contract IVeBend"
          },
          "t_contract(IWETH)8850": {
            "label": "contract IWETH"
          },
          "t_contract(ILendPoolAddressesProvider)8599": {
            "label": "contract ILendPoolAddressesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cc655f3eab491239af4581664aaaf8b8f45cbe972fe230528f194d96b78b4a1c": {
      "address": "0xC6F359872A24D5D7f673Ca09A2a5D0A7691907e5",
      "txHash": "0x52968396248fd7517b793d5ac8b1d69fcec8fce0f1d39adcce78857c31805996",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LockupBendFactory",
            "label": "bendToken",
            "type": "t_contract(IERC20Upgradeable)1050",
            "src": "contracts/incentives/LockupBendFactory.sol:27"
          },
          {
            "contract": "LockupBendFactory",
            "label": "veBend",
            "type": "t_contract(IVeBend)12448",
            "src": "contracts/incentives/LockupBendFactory.sol:28"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeDistributor",
            "type": "t_contract(IFeeDistributor)8760",
            "src": "contracts/incentives/LockupBendFactory.sol:29"
          },
          {
            "contract": "LockupBendFactory",
            "label": "lockups",
            "type": "t_array(t_contract(ILockup)8957)3_storage",
            "src": "contracts/incentives/LockupBendFactory.sol:31"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndexs",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/LockupBendFactory.sol:33"
          },
          {
            "contract": "LockupBendFactory",
            "label": "locked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/LockupBendFactory.sol:34"
          },
          {
            "contract": "LockupBendFactory",
            "label": "authedBeneficiaries",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/incentives/LockupBendFactory.sol:35"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndex",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:36"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndexlastUpdateTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:37"
          },
          {
            "contract": "LockupBendFactory",
            "label": "totalLocked",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:38"
          },
          {
            "contract": "LockupBendFactory",
            "label": "WETH",
            "type": "t_contract(IWETH)9114",
            "src": "contracts/incentives/LockupBendFactory.sol:40"
          },
          {
            "contract": "LockupBendFactory",
            "label": "snapshotDelegation",
            "type": "t_contract(ISnapshotDelegation)9057",
            "src": "contracts/incentives/LockupBendFactory.sol:41"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1050": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IVeBend)12448": {
            "label": "contract IVeBend"
          },
          "t_contract(IFeeDistributor)8760": {
            "label": "contract IFeeDistributor"
          },
          "t_array(t_contract(ILockup)8957)3_storage": {
            "label": "contract ILockup[3]"
          },
          "t_contract(ILockup)8957": {
            "label": "contract ILockup"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IWETH)9114": {
            "label": "contract IWETH"
          },
          "t_contract(ISnapshotDelegation)9057": {
            "label": "contract ISnapshotDelegation"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "29ef7da473737701f505fdb14462f279bfe35f1b0822f543c14269da3f9c8806": {
      "address": "0xfaeDBb799E52c0a978f7c000A380b0495eDd75BD",
      "txHash": "0x4d444f5e0a9a856b8bf23a9f064127e6e2e9acee6b4a486049101e8eccb1aa92",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1827_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4832_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "StakedBUNI",
            "label": "stakedToken",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:25"
          },
          {
            "contract": "StakedBUNI",
            "label": "rewardToken",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:26"
          },
          {
            "contract": "StakedBUNI",
            "label": "rewardVault",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:28"
          },
          {
            "contract": "StakedBUNI",
            "label": "stakerRewardsToClaim",
            "type": "t_mapping(t_address,t_uint256)",
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)4832_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4832_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1827_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)1827_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
