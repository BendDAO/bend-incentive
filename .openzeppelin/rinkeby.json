{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1BeF08feEd40e306b0f6A53064f64F7DE3060252",
    "txHash": "0x80fe3ca7c25f0ad47489978c113edbc39f919a11c956627754290f6790309727",
    "deployTransaction": {
      "hash": "0x80fe3ca7c25f0ad47489978c113edbc39f919a11c956627754290f6790309727",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x8B0a2D45aC9D4BaCa1589EF82eC6A2C7c4Ef69Dc",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x4190aae6"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x4190aadb"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x4190aae6"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 491,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xdd0bd823a4687922efb637fce9a91817a465fc4bbf3794282d34af0a13e5c2fd",
      "s": "0x0a10bbccd5a6ab7ab7c2bccf24e04d3d04c33b298df7ce894219745a0d2dd788",
      "v": 0,
      "creates": "0x1BeF08feEd40e306b0f6A53064f64F7DE3060252",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x0791A14d100bc773446adEf6570b71406A18fAA8",
      "txHash": "0xbd534a209ef6bdbed3ea10b8239d38e10ec8f50d6f7b49d86b3d82de5d35569f",
      "kind": "transparent"
    },
    {
      "address": "0xD800e97aE32b06C1e89ca5126c7bF6aEF89D6B24",
      "txHash": "0xef32d9243eacee1dadca9dfcf70b5dde541c44e8d0e4f18c08fb06df3b643424",
      "kind": "transparent"
    },
    {
      "address": "0xbDA0F2022b7620cf8548d6ff36A2032F6fb4149F",
      "txHash": "0xf5df20e42cc59df666d6ed1315cf414b411ba2993cd1c27eba78bc191d6fe67e",
      "kind": "transparent"
    },
    {
      "address": "0x92ae0136A69CCa54792289a6A7B3EBd106b56a06",
      "txHash": "0xf01ac18f5c028e0bd1e3d47aae356e06397046aee34b5886c01ca5889c6ee91a",
      "kind": "transparent"
    },
    {
      "address": "0xfe4E6A6DE7dD83eeC7E55f233d2CDb907Dd6E9A1",
      "txHash": "0xa3b7b0e8b4aaaa4c72679ad1d2067eaf9877ac00e1c18999169a4d84c7e9db71",
      "kind": "transparent"
    },
    {
      "address": "0xc4B15D9C973366190531D32A309F2116e38Fa1A8",
      "txHash": "0x8f7a3ac247758fb38836c9aefdc3442c2c0fdb9fd77de8075fc63ea63a35fd61",
      "kind": "transparent"
    },
    {
      "address": "0x0090A7E1328cC41F712d3484a51F044fDe014FcE",
      "txHash": "0x74cd8e02d1e8eafb32c0b3300866c67db265614aee45b0c2f14978d426d1ee10",
      "kind": "transparent"
    },
    {
      "address": "0x602bE80f0Bf54E0AffaCD794dfe3ac0f867F7581",
      "txHash": "0xc76ab0d21a395c3ed320f1d732b8db64fd9f532760f7f9047da88046ca8bea08",
      "kind": "transparent"
    },
    {
      "address": "0x14b4B7319451fe3B9b1A98909A5DcE9F410aF282",
      "txHash": "0x53108737041cbf06f44930fbe05d23f3adb6047ef51a2df42a300cbc648846e0",
      "kind": "transparent"
    },
    {
      "address": "0x52163eedA5Ab66aeaCe49C6cbEaa062540962660",
      "txHash": "0x9b31b9050b2a5a3e29899d962559263f9c68d8041de1994f43d87c21fd68d1ad",
      "kind": "transparent"
    },
    {
      "address": "0xeDf4Bd7FBCEcf13Ad0fD77ed8987855FCE8b14C7",
      "txHash": "0xe21606b499ecaffce166b281c1b35a96f0657e23a02432ba835246b6de576d58",
      "kind": "transparent"
    },
    {
      "address": "0xCe4921630BA64394e73C9F2d61d8f97C0A4b2B5d",
      "txHash": "0xda3e97ed261a66027a949d71f1fc830408378a8ed21dab38aacd269d78c7ef3e",
      "kind": "transparent"
    },
    {
      "address": "0xd5e98A430cce5D4BE5dF039b1E0bb116e4Fe2BEf",
      "txHash": "0x42bc7f44d691eb5ae365a65cd34a8ce9a4c04a13c8a07352b759b2ebe3dde959",
      "kind": "transparent"
    },
    {
      "address": "0xc823f63531199F83e297654DCEd6183D580d3085",
      "txHash": "0x810502151e19140cb12d30d514dca6c3acf134dba84acd4bbaa4088665bb112c",
      "kind": "transparent"
    },
    {
      "address": "0x48Ec60509eecd210Ee6c699F44C0dE26223b7f2a",
      "txHash": "0x5eeee8500a97242e3c67961ea9d7c14a00bd6db91788d680c16739775a11014e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8cb633faad7ba4989ef80558e5dd1202b6676c2be50f8423c643f46ba428e606": {
      "address": "0x110375bfFDa923F3780CEBAe4f1D6C5D6fE6f016",
      "txHash": "0x4a4cf47cd15da4a238e262463773aeb08869dd90bbfafb7172cd2faaaddafae4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1598_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1598_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1598_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7e96ac042ef5aae1fa42131a4c3449524350c80676e2d8711b3438292a0301e5": {
      "address": "0xE253A2b24eb2D497d84650246Eb347D94a3bf6EC",
      "txHash": "0x538c7178f2a2c6d280d35c870cf1c047f0f4efe354d69517b0a4f15419320ab0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4282_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)821",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)821": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)4282_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4282_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f8f2266b65d95e80b0b14d35a08cbbf96c978de6a4684d57f25e8e52edc186bc": {
      "address": "0x68FeeC7Cb4678874761eb81C86E490D9deF80d4a",
      "txHash": "0xd2d2b37815aaaa9ec183cb1b4a1009cc0024a82c042f4cd3022149cf9b9fd151",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1627_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:94"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1627_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1627_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b558a55b35df58ee79c219d6a05ed2e2608b64fac98f4767d15609a0ca917e18": {
      "address": "0xf5f70455fb2245Ba579e27388Da85D88bA27c443",
      "txHash": "0xb208f7932f74cddfd9194bc760eb7fa890608608de9466e87d9e9769c4bd5a3b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4763_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)850",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)850": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)4763_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4763_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e437b94d417929cb64d82fa67a26380cbda19e4d46b0958e0a135d232fe1b616": {
      "address": "0x351782BEd5c2387249c7A6afE2a58c290a3bB4f4",
      "txHash": "0x2eaf24b502894f0c0172c2ce9ea52eee9c9bca495a76553b2e5e8f5b965efe03",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:18"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:19"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1c26c49f53794a60e7ec8aad25d13a64ec6a4c0ab8317bc2cb33f4a8735cc023": {
      "address": "0xeC92df75caDf8d2C25b6CB89b78C2CCb20BA7Ced",
      "txHash": "0x2489f0af6189d35ccc0d0f8175e2c4c27ede8e5025549211cc6e958a1cb014b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "VeBend",
            "label": "token",
            "type": "t_address",
            "src": "contracts/vote/VeBend.sol:54"
          },
          {
            "contract": "VeBend",
            "label": "supply",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:55"
          },
          {
            "contract": "VeBend",
            "label": "locked",
            "type": "t_mapping(t_address,t_struct(LockedBalance)10960_storage)",
            "src": "contracts/vote/VeBend.sol:57"
          },
          {
            "contract": "VeBend",
            "label": "epoch",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:60"
          },
          {
            "contract": "VeBend",
            "label": "supplyPointHistory",
            "type": "t_array(t_struct(Point)10955_storage)100000000000000000000000000000_storage",
            "src": "contracts/vote/VeBend.sol:61"
          },
          {
            "contract": "VeBend",
            "label": "userPointHistory",
            "type": "t_mapping(t_address,t_array(t_struct(Point)10955_storage)1000000000_storage)",
            "src": "contracts/vote/VeBend.sol:62"
          },
          {
            "contract": "VeBend",
            "label": "userPointEpoch",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vote/VeBend.sol:63"
          },
          {
            "contract": "VeBend",
            "label": "slopeChanges",
            "type": "t_mapping(t_uint256,t_int256)",
            "src": "contracts/vote/VeBend.sol:64"
          },
          {
            "contract": "VeBend",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:66"
          },
          {
            "contract": "VeBend",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:67"
          },
          {
            "contract": "VeBend",
            "label": "decimals",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(LockedBalance)10960_storage)": {
            "label": "mapping(address => struct IVeBend.LockedBalance)"
          },
          "t_struct(LockedBalance)10960_storage": {
            "label": "struct IVeBend.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_array(t_struct(Point)10955_storage)100000000000000000000000000000_storage": {
            "label": "struct IVeBend.Point[100000000000000000000000000000]"
          },
          "t_struct(Point)10955_storage": {
            "label": "struct IVeBend.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int256"
              },
              {
                "label": "slope",
                "type": "t_int256"
              },
              {
                "label": "ts",
                "type": "t_uint256"
              },
              {
                "label": "blk",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Point)10955_storage)1000000000_storage)": {
            "label": "mapping(address => struct IVeBend.Point[1000000000])"
          },
          "t_array(t_struct(Point)10955_storage)1000000000_storage": {
            "label": "struct IVeBend.Point[1000000000]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_int256)": {
            "label": "mapping(uint256 => int256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2a2460ebaebb65d4cc6c77233d64835c2b7b3fc5a03b2ee234e16741964aed69": {
      "address": "0x237c5c1e18fcB0B972dd4122236609b22594e1b0",
      "txHash": "0xd510e46690506698a7b265e91b75eb42a9fb78ab3a98d881ebec6e67c5c1e6cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1769_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1769_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1769_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fcd222728183ba2a515d6dc09fce2100d2f4c01e583b6b141ff7aafe799716f1": {
      "address": "0xe43C9272eE9E419753Fab52Bb2618c4B3B2f1de6",
      "txHash": "0xe55e78d1155a423978b0414438513db0c675a96446bd2958d8c7a77809010104",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4661_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)992",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)992": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)4661_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4661_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7b969818d79364e4538bd2f63468557ee9c7dbda9e99a8b723f52b52327e180a": {
      "address": "0xf9FF1B7b900490c4E7BF91A69e8495b32E596959",
      "txHash": "0x56ce39d6899191d567db86b5477760a0d5ebd8f1c27f69b582da523e966b20ff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:18"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:19"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7edddc406b3133078dc0b181e8e11fcc9cefc6e67916b5c61424b971322c0f8f": {
      "address": "0x045ac48Bd2d7977Da120cBAb96d94f7D13f96345",
      "txHash": "0x7c73d4b6c5455a7bdc7f69746179d72dff75f3e0d750b201206d64cab6528cda",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeDistributor",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:24"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursor",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:25"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursorOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:26"
          },
          {
            "contract": "FeeDistributor",
            "label": "userEpochOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:27"
          },
          {
            "contract": "FeeDistributor",
            "label": "lastDistributeTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:29"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokensPerWeek",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "src": "contracts/incentives/FeeDistributor.sol:30"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokenLastBalance",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:31"
          },
          {
            "contract": "FeeDistributor",
            "label": "veSupply",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "src": "contracts/incentives/FeeDistributor.sol:33"
          },
          {
            "contract": "FeeDistributor",
            "label": "veBend",
            "type": "t_contract(IVeBend)11846",
            "src": "contracts/incentives/FeeDistributor.sol:35"
          },
          {
            "contract": "FeeDistributor",
            "label": "WETH",
            "type": "t_contract(IWETH)8609",
            "src": "contracts/incentives/FeeDistributor.sol:36"
          },
          {
            "contract": "FeeDistributor",
            "label": "addressesProvider",
            "type": "t_contract(ILendPoolAddressesProvider)8367",
            "src": "contracts/incentives/FeeDistributor.sol:37"
          },
          {
            "contract": "FeeDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:38"
          },
          {
            "contract": "FeeDistributor",
            "label": "bendCollector",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)1000000000000000_storage": {
            "label": "uint256[1000000000000000]"
          },
          "t_contract(IVeBend)11846": {
            "label": "contract IVeBend"
          },
          "t_contract(IWETH)8609": {
            "label": "contract IWETH"
          },
          "t_contract(ILendPoolAddressesProvider)8367": {
            "label": "contract ILendPoolAddressesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "77aaa75ab324d1e2b65c99929c9d31c6587cc2f5ac605089d92c2d808072f587": {
      "address": "0x547bb463018d941eF2FBa7C7207895e79fe7B64b",
      "txHash": "0x4aa0c9b5841d78062b4711b535dd40f0f181f01d2cd45104ce25f2bc4265286e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeDistributor",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:24"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursor",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:25"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursorOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:26"
          },
          {
            "contract": "FeeDistributor",
            "label": "userEpochOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:27"
          },
          {
            "contract": "FeeDistributor",
            "label": "lastDistributeTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:29"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokensPerWeek",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "src": "contracts/incentives/FeeDistributor.sol:30"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokenLastBalance",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:31"
          },
          {
            "contract": "FeeDistributor",
            "label": "veSupply",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "src": "contracts/incentives/FeeDistributor.sol:33"
          },
          {
            "contract": "FeeDistributor",
            "label": "veBend",
            "type": "t_contract(IVeBend)11904",
            "src": "contracts/incentives/FeeDistributor.sol:35"
          },
          {
            "contract": "FeeDistributor",
            "label": "WETH",
            "type": "t_contract(IWETH)8631",
            "src": "contracts/incentives/FeeDistributor.sol:36"
          },
          {
            "contract": "FeeDistributor",
            "label": "addressesProvider",
            "type": "t_contract(ILendPoolAddressesProvider)8389",
            "src": "contracts/incentives/FeeDistributor.sol:37"
          },
          {
            "contract": "FeeDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:38"
          },
          {
            "contract": "FeeDistributor",
            "label": "bendCollector",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)1000000000000000_storage": {
            "label": "uint256[1000000000000000]"
          },
          "t_contract(IVeBend)11904": {
            "label": "contract IVeBend"
          },
          "t_contract(IWETH)8631": {
            "label": "contract IWETH"
          },
          "t_contract(ILendPoolAddressesProvider)8389": {
            "label": "contract ILendPoolAddressesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
