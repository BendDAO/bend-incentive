{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1BeF08feEd40e306b0f6A53064f64F7DE3060252",
    "txHash": "0x80fe3ca7c25f0ad47489978c113edbc39f919a11c956627754290f6790309727"
  },
  "proxies": [
    {
      "address": "0x0791A14d100bc773446adEf6570b71406A18fAA8",
      "txHash": "0xbd534a209ef6bdbed3ea10b8239d38e10ec8f50d6f7b49d86b3d82de5d35569f",
      "kind": "transparent"
    },
    {
      "address": "0xD800e97aE32b06C1e89ca5126c7bF6aEF89D6B24",
      "txHash": "0xef32d9243eacee1dadca9dfcf70b5dde541c44e8d0e4f18c08fb06df3b643424",
      "kind": "transparent"
    },
    {
      "address": "0xbDA0F2022b7620cf8548d6ff36A2032F6fb4149F",
      "txHash": "0xf5df20e42cc59df666d6ed1315cf414b411ba2993cd1c27eba78bc191d6fe67e",
      "kind": "transparent"
    },
    {
      "address": "0x92ae0136A69CCa54792289a6A7B3EBd106b56a06",
      "txHash": "0xf01ac18f5c028e0bd1e3d47aae356e06397046aee34b5886c01ca5889c6ee91a",
      "kind": "transparent"
    },
    {
      "address": "0xfe4E6A6DE7dD83eeC7E55f233d2CDb907Dd6E9A1",
      "txHash": "0xa3b7b0e8b4aaaa4c72679ad1d2067eaf9877ac00e1c18999169a4d84c7e9db71",
      "kind": "transparent"
    },
    {
      "address": "0xc4B15D9C973366190531D32A309F2116e38Fa1A8",
      "txHash": "0x8f7a3ac247758fb38836c9aefdc3442c2c0fdb9fd77de8075fc63ea63a35fd61",
      "kind": "transparent"
    },
    {
      "address": "0x0090A7E1328cC41F712d3484a51F044fDe014FcE",
      "txHash": "0x74cd8e02d1e8eafb32c0b3300866c67db265614aee45b0c2f14978d426d1ee10",
      "kind": "transparent"
    },
    {
      "address": "0x602bE80f0Bf54E0AffaCD794dfe3ac0f867F7581",
      "txHash": "0xc76ab0d21a395c3ed320f1d732b8db64fd9f532760f7f9047da88046ca8bea08",
      "kind": "transparent"
    },
    {
      "address": "0x14b4B7319451fe3B9b1A98909A5DcE9F410aF282",
      "txHash": "0x53108737041cbf06f44930fbe05d23f3adb6047ef51a2df42a300cbc648846e0",
      "kind": "transparent"
    },
    {
      "address": "0x52163eedA5Ab66aeaCe49C6cbEaa062540962660",
      "txHash": "0x9b31b9050b2a5a3e29899d962559263f9c68d8041de1994f43d87c21fd68d1ad",
      "kind": "transparent"
    },
    {
      "address": "0xeDf4Bd7FBCEcf13Ad0fD77ed8987855FCE8b14C7",
      "txHash": "0xe21606b499ecaffce166b281c1b35a96f0657e23a02432ba835246b6de576d58",
      "kind": "transparent"
    },
    {
      "address": "0xCe4921630BA64394e73C9F2d61d8f97C0A4b2B5d",
      "txHash": "0xda3e97ed261a66027a949d71f1fc830408378a8ed21dab38aacd269d78c7ef3e",
      "kind": "transparent"
    },
    {
      "address": "0xd5e98A430cce5D4BE5dF039b1E0bb116e4Fe2BEf",
      "txHash": "0x42bc7f44d691eb5ae365a65cd34a8ce9a4c04a13c8a07352b759b2ebe3dde959",
      "kind": "transparent"
    },
    {
      "address": "0xc823f63531199F83e297654DCEd6183D580d3085",
      "txHash": "0x810502151e19140cb12d30d514dca6c3acf134dba84acd4bbaa4088665bb112c",
      "kind": "transparent"
    },
    {
      "address": "0x48Ec60509eecd210Ee6c699F44C0dE26223b7f2a",
      "txHash": "0x5eeee8500a97242e3c67961ea9d7c14a00bd6db91788d680c16739775a11014e",
      "kind": "transparent"
    },
    {
      "address": "0xE84Cb5C818bDa53E6b0C7e3f73FB3505652A9CfE",
      "txHash": "0x8cfc4f481da650402fb34433764da0ea2782d76cf757cdc0d5c851339658a6b7",
      "kind": "transparent"
    },
    {
      "address": "0x2C5a3eA72B3a2B4832f53F66BE06FB203E8e7fd6",
      "txHash": "0x0993bd7a686ce42b3a11ef65b52386e96daf4e2f6601464d1b6295d1513c8838",
      "kind": "transparent"
    },
    {
      "address": "0xC76fddEcc099dceBD0dF7ee37DD41e6c24c617B6",
      "txHash": "0x71f384f24298c34e6619eae1d6ec60b90c3c8297ce69a2a81be09a5ffd96dbb7",
      "kind": "transparent"
    },
    {
      "address": "0x9b996Dda1D1eE55Cc008f581A8026d3248a50E48",
      "txHash": "0x91cb67b4f87c10ca47a1e1514ae40c777f0558fff6c52f0abdc8c760c526740b",
      "kind": "transparent"
    },
    {
      "address": "0xc5994d413a2256436a6E9Ad5653487C8CE217945",
      "txHash": "0x6dc167856f73c0626fb52fc1f17d72e1eae6f884d9ed46c0005a65985fb80b35",
      "kind": "transparent"
    },
    {
      "address": "0xe375EC95ecd0ACd4c2a04Bfb0f576f4A89097734",
      "txHash": "0x9757acb6fbe851c95f6365a2315d0715c5d9c4baef8aa4bdeaaed0ff6dff13b4",
      "kind": "transparent"
    },
    {
      "address": "0x844d603F22dE09F4586d2C5f3a01B5c8f42a65C9",
      "txHash": "0x4ee2b2ddc57f75a807d49c74eedec840f7d0828bd1be3b3b0075131f06d765b6",
      "kind": "transparent"
    },
    {
      "address": "0xEC087671c68c7fE8aAeDEf974B7C2aAe3BC6be3b",
      "txHash": "0x7c29f8f15a0c8214cbe2cb7203756456ffd2e0d0bf9afbcb5dc0afeaf091c77d",
      "kind": "transparent"
    },
    {
      "address": "0x631369f9A13d23142563fda08E6bB3fAa8c3852b",
      "txHash": "0xc890f0cdc8ae662dfee2cdba90f4481b43cc4b83304b03619088da125d056282",
      "kind": "transparent"
    },
    {
      "address": "0x13b5d4FC8AcFD8e273C3B401F1B2D9e984C05e0A",
      "txHash": "0x89de9b4bfd26e5440e4b3ac2f49b96a0620876eca75e77b7c270fc7007d00306",
      "kind": "transparent"
    },
    {
      "address": "0x25dCb84b92A05f7a45d78e1A876DD526CfA2fa2D",
      "txHash": "0xbd32d59072db90347b36f25693cbac54fbc46e120ccc28ce90eed82ee6d55f21",
      "kind": "transparent"
    },
    {
      "address": "0x32DCA6166AfFD2208E766b6749f8CC78EA4e9062",
      "txHash": "0x1c9d581212413ccd9c46ba474f0a6d1d9da6016d2c0dd07530aae3d03b65bbe9",
      "kind": "transparent"
    },
    {
      "address": "0x1eCF317FCDB855fc3e4C6d57D035F0666a96FE24",
      "txHash": "0x90440e6d2b716d9d60e38fe7610a6c4e09df491bc22500e995f31a0fa4ef8418",
      "kind": "transparent"
    },
    {
      "address": "0xA8b8694D3ca39C301bC409b235df77918b9f1594",
      "txHash": "0xa69d909123575545bb51b8238da7f32b9f9c13e56c11a78622d5fc525b0638a5",
      "kind": "transparent"
    },
    {
      "address": "0xb6C1794EB199d940153f1E65178EcF7D49f069F2",
      "kind": "transparent"
    },
    {
      "address": "0xb6C1794EB199d940153f1E65178EcF7D49f069F2",
      "kind": "transparent"
    },
    {
      "address": "0xab576dAab2F1eB5417E1064EaBDe801af934D0e7",
      "txHash": "0xefa0332a52979f29086a8932729c5ed7aaf34502a3828f2a7088526cb99866b1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8cb633faad7ba4989ef80558e5dd1202b6676c2be50f8423c643f46ba428e606": {
      "address": "0x110375bfFDa923F3780CEBAe4f1D6C5D6fE6f016",
      "txHash": "0x4a4cf47cd15da4a238e262463773aeb08869dd90bbfafb7172cd2faaaddafae4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1598_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1598_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1598_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7e96ac042ef5aae1fa42131a4c3449524350c80676e2d8711b3438292a0301e5": {
      "address": "0xE253A2b24eb2D497d84650246Eb347D94a3bf6EC",
      "txHash": "0x538c7178f2a2c6d280d35c870cf1c047f0f4efe354d69517b0a4f15419320ab0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4282_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)821",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)821": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)4282_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4282_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f8f2266b65d95e80b0b14d35a08cbbf96c978de6a4684d57f25e8e52edc186bc": {
      "address": "0x68FeeC7Cb4678874761eb81C86E490D9deF80d4a",
      "txHash": "0xd2d2b37815aaaa9ec183cb1b4a1009cc0024a82c042f4cd3022149cf9b9fd151",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1627_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:94"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1627_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1627_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b558a55b35df58ee79c219d6a05ed2e2608b64fac98f4767d15609a0ca917e18": {
      "address": "0xf5f70455fb2245Ba579e27388Da85D88bA27c443",
      "txHash": "0xb208f7932f74cddfd9194bc760eb7fa890608608de9466e87d9e9769c4bd5a3b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4763_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)850",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)850": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)4763_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4763_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e437b94d417929cb64d82fa67a26380cbda19e4d46b0958e0a135d232fe1b616": {
      "address": "0x351782BEd5c2387249c7A6afE2a58c290a3bB4f4",
      "txHash": "0x2eaf24b502894f0c0172c2ce9ea52eee9c9bca495a76553b2e5e8f5b965efe03",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:18"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:19"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1c26c49f53794a60e7ec8aad25d13a64ec6a4c0ab8317bc2cb33f4a8735cc023": {
      "address": "0xeC92df75caDf8d2C25b6CB89b78C2CCb20BA7Ced",
      "txHash": "0x2489f0af6189d35ccc0d0f8175e2c4c27ede8e5025549211cc6e958a1cb014b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "VeBend",
            "label": "token",
            "type": "t_address",
            "src": "contracts/vote/VeBend.sol:54"
          },
          {
            "contract": "VeBend",
            "label": "supply",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:55"
          },
          {
            "contract": "VeBend",
            "label": "locked",
            "type": "t_mapping(t_address,t_struct(LockedBalance)10960_storage)",
            "src": "contracts/vote/VeBend.sol:57"
          },
          {
            "contract": "VeBend",
            "label": "epoch",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:60"
          },
          {
            "contract": "VeBend",
            "label": "supplyPointHistory",
            "type": "t_array(t_struct(Point)10955_storage)100000000000000000000000000000_storage",
            "src": "contracts/vote/VeBend.sol:61"
          },
          {
            "contract": "VeBend",
            "label": "userPointHistory",
            "type": "t_mapping(t_address,t_array(t_struct(Point)10955_storage)1000000000_storage)",
            "src": "contracts/vote/VeBend.sol:62"
          },
          {
            "contract": "VeBend",
            "label": "userPointEpoch",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vote/VeBend.sol:63"
          },
          {
            "contract": "VeBend",
            "label": "slopeChanges",
            "type": "t_mapping(t_uint256,t_int256)",
            "src": "contracts/vote/VeBend.sol:64"
          },
          {
            "contract": "VeBend",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:66"
          },
          {
            "contract": "VeBend",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:67"
          },
          {
            "contract": "VeBend",
            "label": "decimals",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(LockedBalance)10960_storage)": {
            "label": "mapping(address => struct IVeBend.LockedBalance)"
          },
          "t_struct(LockedBalance)10960_storage": {
            "label": "struct IVeBend.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_array(t_struct(Point)10955_storage)100000000000000000000000000000_storage": {
            "label": "struct IVeBend.Point[100000000000000000000000000000]"
          },
          "t_struct(Point)10955_storage": {
            "label": "struct IVeBend.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int256"
              },
              {
                "label": "slope",
                "type": "t_int256"
              },
              {
                "label": "ts",
                "type": "t_uint256"
              },
              {
                "label": "blk",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Point)10955_storage)1000000000_storage)": {
            "label": "mapping(address => struct IVeBend.Point[1000000000])"
          },
          "t_array(t_struct(Point)10955_storage)1000000000_storage": {
            "label": "struct IVeBend.Point[1000000000]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_int256)": {
            "label": "mapping(uint256 => int256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2a2460ebaebb65d4cc6c77233d64835c2b7b3fc5a03b2ee234e16741964aed69": {
      "address": "0x237c5c1e18fcB0B972dd4122236609b22594e1b0",
      "txHash": "0xd510e46690506698a7b265e91b75eb42a9fb78ab3a98d881ebec6e67c5c1e6cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1769_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1769_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1769_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fcd222728183ba2a515d6dc09fce2100d2f4c01e583b6b141ff7aafe799716f1": {
      "address": "0xe43C9272eE9E419753Fab52Bb2618c4B3B2f1de6",
      "txHash": "0xe55e78d1155a423978b0414438513db0c675a96446bd2958d8c7a77809010104",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4661_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)992",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)992": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)4661_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4661_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7b969818d79364e4538bd2f63468557ee9c7dbda9e99a8b723f52b52327e180a": {
      "address": "0xf9FF1B7b900490c4E7BF91A69e8495b32E596959",
      "txHash": "0x56ce39d6899191d567db86b5477760a0d5ebd8f1c27f69b582da523e966b20ff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:18"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:19"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7edddc406b3133078dc0b181e8e11fcc9cefc6e67916b5c61424b971322c0f8f": {
      "address": "0x045ac48Bd2d7977Da120cBAb96d94f7D13f96345",
      "txHash": "0x7c73d4b6c5455a7bdc7f69746179d72dff75f3e0d750b201206d64cab6528cda",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeDistributor",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:24"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursor",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:25"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursorOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:26"
          },
          {
            "contract": "FeeDistributor",
            "label": "userEpochOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:27"
          },
          {
            "contract": "FeeDistributor",
            "label": "lastDistributeTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:29"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokensPerWeek",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "src": "contracts/incentives/FeeDistributor.sol:30"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokenLastBalance",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:31"
          },
          {
            "contract": "FeeDistributor",
            "label": "veSupply",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "src": "contracts/incentives/FeeDistributor.sol:33"
          },
          {
            "contract": "FeeDistributor",
            "label": "veBend",
            "type": "t_contract(IVeBend)11846",
            "src": "contracts/incentives/FeeDistributor.sol:35"
          },
          {
            "contract": "FeeDistributor",
            "label": "WETH",
            "type": "t_contract(IWETH)8609",
            "src": "contracts/incentives/FeeDistributor.sol:36"
          },
          {
            "contract": "FeeDistributor",
            "label": "addressesProvider",
            "type": "t_contract(ILendPoolAddressesProvider)8367",
            "src": "contracts/incentives/FeeDistributor.sol:37"
          },
          {
            "contract": "FeeDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:38"
          },
          {
            "contract": "FeeDistributor",
            "label": "bendCollector",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)1000000000000000_storage": {
            "label": "uint256[1000000000000000]"
          },
          "t_contract(IVeBend)11846": {
            "label": "contract IVeBend"
          },
          "t_contract(IWETH)8609": {
            "label": "contract IWETH"
          },
          "t_contract(ILendPoolAddressesProvider)8367": {
            "label": "contract ILendPoolAddressesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "77aaa75ab324d1e2b65c99929c9d31c6587cc2f5ac605089d92c2d808072f587": {
      "address": "0x547bb463018d941eF2FBa7C7207895e79fe7B64b",
      "txHash": "0x4aa0c9b5841d78062b4711b535dd40f0f181f01d2cd45104ce25f2bc4265286e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeDistributor",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:24"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursor",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:25"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursorOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:26"
          },
          {
            "contract": "FeeDistributor",
            "label": "userEpochOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:27"
          },
          {
            "contract": "FeeDistributor",
            "label": "lastDistributeTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:29"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokensPerWeek",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "src": "contracts/incentives/FeeDistributor.sol:30"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokenLastBalance",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:31"
          },
          {
            "contract": "FeeDistributor",
            "label": "veSupply",
            "type": "t_array(t_uint256)1000000000000000_storage",
            "src": "contracts/incentives/FeeDistributor.sol:33"
          },
          {
            "contract": "FeeDistributor",
            "label": "veBend",
            "type": "t_contract(IVeBend)11904",
            "src": "contracts/incentives/FeeDistributor.sol:35"
          },
          {
            "contract": "FeeDistributor",
            "label": "WETH",
            "type": "t_contract(IWETH)8631",
            "src": "contracts/incentives/FeeDistributor.sol:36"
          },
          {
            "contract": "FeeDistributor",
            "label": "addressesProvider",
            "type": "t_contract(ILendPoolAddressesProvider)8389",
            "src": "contracts/incentives/FeeDistributor.sol:37"
          },
          {
            "contract": "FeeDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:38"
          },
          {
            "contract": "FeeDistributor",
            "label": "bendCollector",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)1000000000000000_storage": {
            "label": "uint256[1000000000000000]"
          },
          "t_contract(IVeBend)11904": {
            "label": "contract IVeBend"
          },
          "t_contract(IWETH)8631": {
            "label": "contract IWETH"
          },
          "t_contract(ILendPoolAddressesProvider)8389": {
            "label": "contract ILendPoolAddressesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5c9e166aadec8760208848cb7a399f77714a381920ab2d13e8c272f77d194a0f": {
      "address": "0xE30c7b8FfC8fE137C55c22F98cF7E00AcB7E3177",
      "txHash": "0xd20a32556f59e1f2da0eaa68266853c3951138b0dc6e6852eca0a539e21f426c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1827_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1827_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1827_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "848bf25eae6158bbda306b4b9ff8a2d48a2ff651f6c93debc74f6f6cf499e4c0": {
      "address": "0x31d54404FD185e6E499877f28Fd9e56A13764D39",
      "txHash": "0xfe5f385bc5d0a7b8dd36e77cfa9ef8c8c5073a64bcd114375c3fc45a34da1a9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4820_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARD_TOKEN",
            "type": "t_contract(IERC20Upgradeable)1050",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:28"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "REWARDS_VAULT",
            "type": "t_address",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:29"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "usersUnclaimedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:31"
          },
          {
            "contract": "BendProtocolIncentivesController",
            "label": "authorizedAssets",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/incentives/BendProtocolIncentivesController.sol:32"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1050": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AssetData)4820_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4820_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c38846a31b4f845661a1dd2474b475e07f02d439646e56e6641b40e52f1c0e82": {
      "address": "0x6987cA330F73A9c7aC5A44496bF52791BBFd2e2A",
      "txHash": "0xb52296b60e4a67243b0626aedd70acd74fa1c66f0449f2f2f8b5d64b078c267a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:23"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "86c1e6923114b4b2e7c0546b7863f7fcf15d0da996e3ce10cd001049496d6727": {
      "address": "0x2b72ffe8243dE578909BA4d93c7021Ba9aF619a1",
      "txHash": "0x58e3521bdd42e4b968a06056ea711344d8b2da263dcf2bc7cf421c7460a9f8ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "VeBend",
            "label": "token",
            "type": "t_address",
            "src": "contracts/vote/VeBend.sol:54"
          },
          {
            "contract": "VeBend",
            "label": "supply",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:55"
          },
          {
            "contract": "VeBend",
            "label": "locked",
            "type": "t_mapping(t_address,t_struct(LockedBalance)14199_storage)",
            "src": "contracts/vote/VeBend.sol:57"
          },
          {
            "contract": "VeBend",
            "label": "epoch",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:60"
          },
          {
            "contract": "VeBend",
            "label": "supplyPointHistory",
            "type": "t_mapping(t_uint256,t_struct(Point)14194_storage)",
            "src": "contracts/vote/VeBend.sol:61"
          },
          {
            "contract": "VeBend",
            "label": "userPointHistory",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Point)14194_storage))",
            "src": "contracts/vote/VeBend.sol:62"
          },
          {
            "contract": "VeBend",
            "label": "userPointEpoch",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vote/VeBend.sol:63"
          },
          {
            "contract": "VeBend",
            "label": "slopeChanges",
            "type": "t_mapping(t_uint256,t_int256)",
            "src": "contracts/vote/VeBend.sol:64"
          },
          {
            "contract": "VeBend",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:66"
          },
          {
            "contract": "VeBend",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:67"
          },
          {
            "contract": "VeBend",
            "label": "decimals",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(LockedBalance)14199_storage)": {
            "label": "mapping(address => struct IVeBend.LockedBalance)"
          },
          "t_struct(LockedBalance)14199_storage": {
            "label": "struct IVeBend.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_struct(Point)14194_storage)": {
            "label": "mapping(uint256 => struct IVeBend.Point)"
          },
          "t_struct(Point)14194_storage": {
            "label": "struct IVeBend.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int256"
              },
              {
                "label": "slope",
                "type": "t_int256"
              },
              {
                "label": "ts",
                "type": "t_uint256"
              },
              {
                "label": "blk",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Point)14194_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IVeBend.Point))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_int256)": {
            "label": "mapping(uint256 => int256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1034dcb2ef42a6af2a7e4b788202e3b2bc9474555dd9c5fda7452211f237ca66": {
      "address": "0x1aCEce3E24dBfb80bab6F3fD06E92d3795cDC3Fa",
      "txHash": "0x178bdc10aeaabb187a9a113199fce21b67151eea45801ce14e600fa7096d8c64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeDistributor",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:23"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursor",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:24"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursorOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:25"
          },
          {
            "contract": "FeeDistributor",
            "label": "userEpochOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:26"
          },
          {
            "contract": "FeeDistributor",
            "label": "lastDistributeTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:28"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokensPerWeek",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:29"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokenLastBalance",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:30"
          },
          {
            "contract": "FeeDistributor",
            "label": "veSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:32"
          },
          {
            "contract": "FeeDistributor",
            "label": "totalClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:34"
          },
          {
            "contract": "FeeDistributor",
            "label": "veBend",
            "type": "t_contract(IVeBend)11920",
            "src": "contracts/incentives/FeeDistributor.sol:36"
          },
          {
            "contract": "FeeDistributor",
            "label": "WETH",
            "type": "t_contract(IWETH)8644",
            "src": "contracts/incentives/FeeDistributor.sol:37"
          },
          {
            "contract": "FeeDistributor",
            "label": "addressesProvider",
            "type": "t_contract(ILendPoolAddressesProvider)8402",
            "src": "contracts/incentives/FeeDistributor.sol:38"
          },
          {
            "contract": "FeeDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:39"
          },
          {
            "contract": "FeeDistributor",
            "label": "bendCollector",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IVeBend)11920": {
            "label": "contract IVeBend"
          },
          "t_contract(IWETH)8644": {
            "label": "contract IWETH"
          },
          "t_contract(ILendPoolAddressesProvider)8402": {
            "label": "contract ILendPoolAddressesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8b5288f7c43d60907c08c645b95ea5d2f9a2eaa3b8a097fad71b83c404cedf2c": {
      "address": "0xe964Ba91BEFE3B50BE24A26b19681A1130933F1C",
      "txHash": "0xc5a21c242ff09b79902a9db418c741f6e4606c822fddc517149ad5eeb57b5f60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Vault",
            "label": "bendToken",
            "type": "t_address",
            "src": "contracts/incentives/Vault.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fef8717d17dfb270770d7356b1be669fb1e9442e717de466da01f710e29f04b6": {
      "address": "0xa27A5A3736271A4329a6fA061C4bBE1CD585b416",
      "txHash": "0xda4e229a8aff2ae087c6def73238fd142afb4b48b3b43f91d5bb9ad218fce246",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1827_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1827_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1827_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e175987a3f2c5352b705694046353207a7ddda4f572c7deba48211aa240df30f": {
      "address": "0xFBD0eC54a0fcdfa061106731353243dB08aE80d0",
      "txHash": "0xa4f3f0af1c82703d021d6f55dd6fc8a5c6c2715ff6e88ebd4a5fc0aa8111ac48",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:23"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74530263132ba7f769cd58de30432bcdaef98449c299fcecda399ef23e47b7f9": {
      "address": "0xc4797cD262BD790e3F023bEbc705f538C9A17542",
      "txHash": "0x5af73655d8411ae433fd455aafd71eccb8083417a3f2bdd2c65ff98686ffe8ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeDistributor",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:23"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursor",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:24"
          },
          {
            "contract": "FeeDistributor",
            "label": "timeCursorOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:25"
          },
          {
            "contract": "FeeDistributor",
            "label": "userEpochOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:26"
          },
          {
            "contract": "FeeDistributor",
            "label": "lastDistributeTime",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:28"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokensPerWeek",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:29"
          },
          {
            "contract": "FeeDistributor",
            "label": "tokenLastBalance",
            "type": "t_uint256",
            "src": "contracts/incentives/FeeDistributor.sol:30"
          },
          {
            "contract": "FeeDistributor",
            "label": "veSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:32"
          },
          {
            "contract": "FeeDistributor",
            "label": "totalClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/FeeDistributor.sol:34"
          },
          {
            "contract": "FeeDistributor",
            "label": "veBEND",
            "type": "t_contract(IVeBend)12187",
            "src": "contracts/incentives/FeeDistributor.sol:36"
          },
          {
            "contract": "FeeDistributor",
            "label": "WETH",
            "type": "t_contract(IWETH)8853",
            "src": "contracts/incentives/FeeDistributor.sol:37"
          },
          {
            "contract": "FeeDistributor",
            "label": "addressesProvider",
            "type": "t_contract(ILendPoolAddressesProvider)8600",
            "src": "contracts/incentives/FeeDistributor.sol:38"
          },
          {
            "contract": "FeeDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:39"
          },
          {
            "contract": "FeeDistributor",
            "label": "bendCollector",
            "type": "t_address",
            "src": "contracts/incentives/FeeDistributor.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IVeBend)12187": {
            "label": "contract IVeBend"
          },
          "t_contract(IWETH)8853": {
            "label": "contract IWETH"
          },
          "t_contract(ILendPoolAddressesProvider)8600": {
            "label": "contract ILendPoolAddressesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3388d38446c1a259bc2bc401e31d16262b7372f15fdac2f83aee8b308870332b": {
      "address": "0x8B89020186362B6BBfdb251a0A33e920B2857dED",
      "txHash": "0x1fa70a5d7d4004faa5dc950150ca89066690605d16bf08c48bbb7890d1403036",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MerkleDistributor",
            "label": "token",
            "type": "t_address",
            "src": "contracts/incentives/MerkleDistributor.sol:20"
          },
          {
            "contract": "MerkleDistributor",
            "label": "isMerkleRootSet",
            "type": "t_bool",
            "src": "contracts/incentives/MerkleDistributor.sol:21"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/incentives/MerkleDistributor.sol:22"
          },
          {
            "contract": "MerkleDistributor",
            "label": "endTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/MerkleDistributor.sol:23"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimed",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/incentives/MerkleDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ed285a78942c2b77af1af1fee4e9c7f6a684f7f0fc3a0027d5563df917ba55e5": {
      "address": "0x9b3cD00468183E2C39C75DA39A8184D2A7b39ec2",
      "txHash": "0x99db22c8523d4102020c1a38f04918e256ce8f75ebf95e1b706aa107544322a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1827_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)4832_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "StakedBUNI",
            "label": "stakedToken",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:25"
          },
          {
            "contract": "StakedBUNI",
            "label": "rewardToken",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:26"
          },
          {
            "contract": "StakedBUNI",
            "label": "rewardVault",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:28"
          },
          {
            "contract": "StakedBUNI",
            "label": "stakerRewardsToClaim",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/StakedBUNI.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)4832_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)4832_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1827_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)1827_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "48ae47879d9b3b10a901406b1bc928e4e4836bea68a0fa0a7a9c2043916e09b2": {
      "address": "0x6d6bd390621F1a55b47F6aB94Af75536D7C75841",
      "txHash": "0xc59330a5d8ff5006b710d0bc3e6c6e283de544ced992c3877d512efbdca791b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1656_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20Detailed",
            "label": "__decimals",
            "type": "t_uint8",
            "src": "contracts/libs/ERC20Detailed.sol:6"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributionManager",
            "label": "DISTRIBUTION_END",
            "type": "t_uint256",
            "src": "contracts/incentives/DistributionManager.sol:27"
          },
          {
            "contract": "DistributionManager",
            "label": "assets",
            "type": "t_mapping(t_address,t_struct(AssetData)2582_storage)",
            "src": "contracts/incentives/DistributionManager.sol:31"
          },
          {
            "contract": "StakedBUNI",
            "label": "stakedToken",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:25"
          },
          {
            "contract": "StakedBUNI",
            "label": "rewardToken",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:26"
          },
          {
            "contract": "StakedBUNI",
            "label": "rewardVault",
            "type": "t_address",
            "src": "contracts/incentives/StakedBUNI.sol:28"
          },
          {
            "contract": "StakedBUNI",
            "label": "stakerRewardsToClaim",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/StakedBUNI.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AssetData)2582_storage)": {
            "label": "mapping(address => struct DistributionManager.AssetData)"
          },
          "t_struct(AssetData)2582_storage": {
            "label": "struct DistributionManager.AssetData",
            "members": [
              {
                "label": "emissionPerSecond",
                "type": "t_uint128"
              },
              {
                "label": "lastUpdateTimestamp",
                "type": "t_uint128"
              },
              {
                "label": "index",
                "type": "t_uint256"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(Counter)1656_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)1656_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "23458dab211134af3d415c32ad30d64a200f45470ead031f640a3deb86b99606": {
      "address": "0x0e1076e1De3cABb2d3a372857130A650F3a58013",
      "txHash": "0xf772402318af0877c5e20da52726cfb7f52b512097e6e1a4c07753f0de352d83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "LockupBendFactory",
            "label": "bendToken",
            "type": "t_contract(IERC20Upgradeable)306",
            "src": "contracts/incentives/LockupBendFactory.sol:27"
          },
          {
            "contract": "LockupBendFactory",
            "label": "veBend",
            "type": "t_contract(IVeBend)3775",
            "src": "contracts/incentives/LockupBendFactory.sol:28"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeDistributor",
            "type": "t_contract(IFeeDistributor)3471",
            "src": "contracts/incentives/LockupBendFactory.sol:29"
          },
          {
            "contract": "LockupBendFactory",
            "label": "lockups",
            "type": "t_array(t_contract(ILockup)3582)3_storage",
            "src": "contracts/incentives/LockupBendFactory.sol:31"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndexs",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/LockupBendFactory.sol:33"
          },
          {
            "contract": "LockupBendFactory",
            "label": "locked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/incentives/LockupBendFactory.sol:34"
          },
          {
            "contract": "LockupBendFactory",
            "label": "authedBeneficiaries",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/incentives/LockupBendFactory.sol:35"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndex",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:36"
          },
          {
            "contract": "LockupBendFactory",
            "label": "feeIndexlastUpdateTimestamp",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:37"
          },
          {
            "contract": "LockupBendFactory",
            "label": "totalLocked",
            "type": "t_uint256",
            "src": "contracts/incentives/LockupBendFactory.sol:38"
          },
          {
            "contract": "LockupBendFactory",
            "label": "WETH",
            "type": "t_contract(IWETH)3653",
            "src": "contracts/incentives/LockupBendFactory.sol:40"
          },
          {
            "contract": "LockupBendFactory",
            "label": "snapshotDelegation",
            "type": "t_contract(ISnapshotDelegation)3606",
            "src": "contracts/incentives/LockupBendFactory.sol:41"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)306": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IVeBend)3775": {
            "label": "contract IVeBend"
          },
          "t_contract(IFeeDistributor)3471": {
            "label": "contract IFeeDistributor"
          },
          "t_array(t_contract(ILockup)3582)3_storage": {
            "label": "contract ILockup[3]"
          },
          "t_contract(ILockup)3582": {
            "label": "contract ILockup"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IWETH)3653": {
            "label": "contract IWETH"
          },
          "t_contract(ISnapshotDelegation)3606": {
            "label": "contract ISnapshotDelegation"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a07fad20fd25eb50b6cc2536dc9363b03085fbb9d6f49b300d62371b500b170f": {
      "address": "0x03575D04752e3Fb2b07DA5896623AdB3CbAE41FA",
      "txHash": "0x70efeb55fdb09daef3c2d2c995bd6a8c2859da2f5cfeea799383215e13f0e7c6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "label": "bendToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20Upgradeable)1050",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:11"
          },
          {
            "label": "veBend",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IVeBend)14305",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:12"
          },
          {
            "label": "feeDistributor",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IFeeDistributor)10135",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:13"
          },
          {
            "label": "lockups",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_contract(ILockup)10344)3_storage",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:15"
          },
          {
            "label": "feeIndexs",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:16"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:17"
          },
          {
            "label": "authedBeneficiaries",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:19"
          },
          {
            "label": "feeIndex",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:21"
          },
          {
            "label": "feeIndexlastUpdateTimestamp",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:22"
          },
          {
            "label": "totalLocked",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:23"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "163",
            "type": "t_contract(IWETH)10657",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:25"
          },
          {
            "label": "snapshotDelegation",
            "offset": 0,
            "slot": "164",
            "type": "t_contract(ISnapshotDelegation)10546",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:26"
          },
          {
            "label": "unlockStartTime",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:30"
          },
          {
            "label": "lockEndTime",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:31"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(Locked)10356_storage)",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(ILockup)10344)3_storage": {
            "label": "contract ILockup[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1050": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFeeDistributor)10135": {
            "label": "contract IFeeDistributor",
            "numberOfBytes": "20"
          },
          "t_contract(ILockup)10344": {
            "label": "contract ILockup",
            "numberOfBytes": "20"
          },
          "t_contract(ISnapshotDelegation)10546": {
            "label": "contract ISnapshotDelegation",
            "numberOfBytes": "20"
          },
          "t_contract(IVeBend)14305": {
            "label": "contract IVeBend",
            "numberOfBytes": "20"
          },
          "t_contract(IWETH)10657": {
            "label": "contract IWETH",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Locked)10356_storage)": {
            "label": "mapping(address => struct ILockupV2.Locked)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Locked)10356_storage": {
            "label": "struct ILockupV2.Locked",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "allAddresses": [
        "0x03575D04752e3Fb2b07DA5896623AdB3CbAE41FA",
        "0x954c24336274ecd4E86CD7ed4aAE385fB5F9b5B9"
      ]
    },
    "4e7d369e9bef302496b0abef928f02631c6fd94efa7d04f05329d253a22173d4": {
      "address": "0x7c969e5C734427942863D908611d22DC1eC7404b",
      "txHash": "0x3c7bb7459fca519a53d453220af1491a4e662a76524a0630ac7dae9245daa756",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "VeBend",
            "label": "token",
            "type": "t_address",
            "src": "contracts/vote/VeBend.sol:55"
          },
          {
            "contract": "VeBend",
            "label": "supply",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:56"
          },
          {
            "contract": "VeBend",
            "label": "locked",
            "type": "t_mapping(t_address,t_struct(LockedBalance)14199_storage)",
            "src": "contracts/vote/VeBend.sol:58"
          },
          {
            "contract": "VeBend",
            "label": "epoch",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:61"
          },
          {
            "contract": "VeBend",
            "label": "supplyPointHistory",
            "type": "t_mapping(t_uint256,t_struct(Point)14194_storage)",
            "src": "contracts/vote/VeBend.sol:62"
          },
          {
            "contract": "VeBend",
            "label": "userPointHistory",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Point)14194_storage))",
            "src": "contracts/vote/VeBend.sol:63"
          },
          {
            "contract": "VeBend",
            "label": "userPointEpoch",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vote/VeBend.sol:64"
          },
          {
            "contract": "VeBend",
            "label": "slopeChanges",
            "type": "t_mapping(t_uint256,t_int256)",
            "src": "contracts/vote/VeBend.sol:65"
          },
          {
            "contract": "VeBend",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:67"
          },
          {
            "contract": "VeBend",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/vote/VeBend.sol:68"
          },
          {
            "contract": "VeBend",
            "label": "decimals",
            "type": "t_uint256",
            "src": "contracts/vote/VeBend.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(LockedBalance)14199_storage)": {
            "label": "mapping(address => struct IVeBend.LockedBalance)"
          },
          "t_struct(LockedBalance)14199_storage": {
            "label": "struct IVeBend.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_int256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_struct(Point)14194_storage)": {
            "label": "mapping(uint256 => struct IVeBend.Point)"
          },
          "t_struct(Point)14194_storage": {
            "label": "struct IVeBend.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_int256"
              },
              {
                "label": "slope",
                "type": "t_int256"
              },
              {
                "label": "ts",
                "type": "t_uint256"
              },
              {
                "label": "blk",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Point)14194_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IVeBend.Point))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_int256)": {
            "label": "mapping(uint256 => int256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dbec5f32a5d337e2eb2a0477500ebe542a894591a1367f79ecff4723adf1761b": {
      "address": "0xBE7DA6B40675892d69C4A8735705934bf7Babd84",
      "txHash": "0x301407cb606e6b6ba82169cdc2921a9cccda2cc99397f89047d077f9bec4adb4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "label": "bendToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20Upgradeable)306",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:11"
          },
          {
            "label": "veBend",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IVeBend)2255",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:12"
          },
          {
            "label": "feeDistributor",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IFeeDistributor)1692",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:13"
          },
          {
            "label": "lockups",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_contract(ILockup)1830)3_storage",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:15"
          },
          {
            "label": "feeIndexs",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:16"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:17"
          },
          {
            "label": "authedBeneficiaries",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:19"
          },
          {
            "label": "feeIndex",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:21"
          },
          {
            "label": "feeIndexlastUpdateTimestamp",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:22"
          },
          {
            "label": "totalLocked",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:23"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "163",
            "type": "t_contract(IWETH)2013",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:25"
          },
          {
            "label": "snapshotDelegation",
            "offset": 0,
            "slot": "164",
            "type": "t_contract(ISnapshotDelegation)1966",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:26"
          },
          {
            "label": "unlockStartTime",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:30"
          },
          {
            "label": "lockEndTime",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:31"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(Locked)1842_storage)",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(ILockup)1830)3_storage": {
            "label": "contract ILockup[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)306": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFeeDistributor)1692": {
            "label": "contract IFeeDistributor",
            "numberOfBytes": "20"
          },
          "t_contract(ILockup)1830": {
            "label": "contract ILockup",
            "numberOfBytes": "20"
          },
          "t_contract(ISnapshotDelegation)1966": {
            "label": "contract ISnapshotDelegation",
            "numberOfBytes": "20"
          },
          "t_contract(IVeBend)2255": {
            "label": "contract IVeBend",
            "numberOfBytes": "20"
          },
          "t_contract(IWETH)2013": {
            "label": "contract IWETH",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Locked)1842_storage)": {
            "label": "mapping(address => struct ILockupV2.Locked)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Locked)1842_storage": {
            "label": "struct ILockupV2.Locked",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "8df8d7e26ad9fb220e8bbc8c2d5d8ff21854e46de73b797543c43e6b6feaf220": {
      "address": "0x36dbba8b57279c3952B229B1F0190B5417E5D08D",
      "txHash": "0x2eae5652ffd2e6e1d6fd6878ce012efde1e95132ee1fa7c7e03c3221a0b444e6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "label": "bendToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20Upgradeable)1050",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:11"
          },
          {
            "label": "veBend",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IVeBend)14347",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:12"
          },
          {
            "label": "feeDistributor",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IFeeDistributor)10165",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:13"
          },
          {
            "label": "lockups",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_contract(ILockup)10374)3_storage",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:15"
          },
          {
            "label": "feeIndexs",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:16"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:17"
          },
          {
            "label": "authedBeneficiaries",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:19"
          },
          {
            "label": "feeIndex",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:21"
          },
          {
            "label": "feeIndexlastUpdateTimestamp",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:22"
          },
          {
            "label": "totalLocked",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:23"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "163",
            "type": "t_contract(IWETH)10697",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:25"
          },
          {
            "label": "snapshotDelegation",
            "offset": 0,
            "slot": "164",
            "type": "t_contract(ISnapshotDelegation)10586",
            "contract": "LockupBendV1Storage",
            "src": "contracts/incentives/LockupBendV1Storage.sol:26"
          },
          {
            "label": "unlockStartTime",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:30"
          },
          {
            "label": "lockEndTime",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:31"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(Locked)10386_storage)",
            "contract": "LockupBendV2",
            "src": "contracts/incentives/LockupBendV2.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(ILockup)10374)3_storage": {
            "label": "contract ILockup[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1050": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFeeDistributor)10165": {
            "label": "contract IFeeDistributor",
            "numberOfBytes": "20"
          },
          "t_contract(ILockup)10374": {
            "label": "contract ILockup",
            "numberOfBytes": "20"
          },
          "t_contract(ISnapshotDelegation)10586": {
            "label": "contract ISnapshotDelegation",
            "numberOfBytes": "20"
          },
          "t_contract(IVeBend)14347": {
            "label": "contract IVeBend",
            "numberOfBytes": "20"
          },
          "t_contract(IWETH)10697": {
            "label": "contract IWETH",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Locked)10386_storage)": {
            "label": "mapping(address => struct ILockupV2.Locked)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Locked)10386_storage": {
            "label": "struct ILockupV2.Locked",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6e96c9ad3b3fd3f34b817d32cd563a1920d004178e2c80f44a1407d963bf0928": {
      "address": "0x4481F7F10bb223550bC4E79387D29c7c868f915F",
      "txHash": "0xd2a7ea370f33d433add250fae18edd9c16fae8d6894aa92da4383342db0bff83",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IWETH)11318",
            "contract": "FeeCollector",
            "src": "contracts/incentives/FeeCollector.sol:15"
          },
          {
            "label": "feeDistributor",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "FeeCollector",
            "src": "contracts/incentives/FeeCollector.sol:16"
          },
          {
            "label": "treasuryPercentage",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "FeeCollector",
            "src": "contracts/incentives/FeeCollector.sol:17"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "FeeCollector",
            "src": "contracts/incentives/FeeCollector.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IWETH)11318": {
            "label": "contract IWETH",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
